1] The == operator compares the value or equality of two objects, whereas the Python is operator checks whether two variables point to the same object in memory.
2] format()

first_name = "ada"
last_name = "lovelace"
full_name = f"{first_name} {last_name}"
print(full_name)

# To insert a variable’s value into a string, place the letter f immediately before the opening quotation mark
# These strings are called f-strings. The f is for format, because Python formats the string by replacing the name of any variable in braces with its value.

3] Python can look for extra whitespace on the right and left sides of a string. To ensure that no whitespace exists at the right end of a string, use
the strip() method.

4] concatenation 一系列相关联的事物（或事件）a series of things or events that are linked together

5] Slicing is used to extract multiple characters (a substring) from a string. Its syntax is similar to that of indexing, 
but instead of just one index you use two indices (numbers) separated by a colon, e.g., str[ind1:ind2]
+---+---+---+---+---+---+
| P | y | t | h | o | n |
+---+---+---+---+---+---+
0   1   2   3   4   5   6
-6  -5  -4  -3  -2  -1

6] If you want to check whether a string contains a specific letter or a substring, you can use the in keyword.

ice_cream = "ice cream"
print("cream" in ice_cream)    # Print boolean result directly

contains = "ice" in ice_cream
print(contains)

7] single quotation marks may be used in a double-quoted string without escaping, and vice versa

8]
name = "John"
# Note: %s is inside the string, % is after the string.
print("Hello, PyCharm! My name is %s!" % name)

print("I'm %d years old" % 32)

